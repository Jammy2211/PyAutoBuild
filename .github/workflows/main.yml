name: Autolens Workspace Test Integration Test

#on: [push]
on: 
  workflow_dispatch

jobs:
  integration_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]  # 3.9 not supported on numba as of 2020-02-11

    steps:
    - uses: actions/checkout@v2
      with:
        path: build
    - name: Checkout autolens_workspace
      uses: actions/checkout@v2
      with:
        #repository: Jammy2211/autolens_workspace
        repository: jonathanfrawley/autolens_workspace
        ref: master
        path: autolens_workspace
    - name: Checkout autolens_workspace_test
      uses: actions/checkout@v2
      with:
        #repository: rhayes777/autolens_workspace_test
        repository: jonathanfrawley/autolens_workspace_test
        ref: feature/release-process
        path: autolens_workspace_test
    - name: Checkout PyAutoFit
      uses: actions/checkout@v2
      with:
        #repository: rhayes777/PyAutoFit
        repository: jonathanfrawley/PyAutoFit
        ref: feature/release-process
        path: PyAutoFit
    - name: Checkout PyAutoArray
      uses: actions/checkout@v2
      with:
        #repository: Jammy2211/PyAutoArray
        repository: jonathanfrawley/PyAutoArray
        ref: feature/release-process
        path: PyAutoArray
    - name: Checkout PyAutoGalaxy
      uses: actions/checkout@v2
      with:
        #repository: Jammy2211/PyAutoGalaxy
        repository: jonathanfrawley/PyAutoGalaxy
        ref: feature/release-process
        path: PyAutoGalaxy
    - name: Checkout PyAutoLens
      uses: actions/checkout@v2
      with:
        #repository: Jammy2211/PyAutoLens
        repository: jonathanfrawley/PyAutoLens
        ref: feature/release-process
        path: PyAutoLens
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      if: steps.cache-pip.outputs.cache-hit != 'true'
      run: |
        pip install -r PyAutoFit/requirements.txt
        pip install -r PyAutoArray/requirements.txt
        pip install -r PyAutoGalaxy/requirements.txt
        pip install -r PyAutoLens/requirements.txt
        pip install -r build/requirements.txt
    #- name: Integration test
    #  run: |
    #    export ROOT_DIR=`pwd`
    #    export PYTHONPATH=$PYTHONPATH:$ROOT_DIR/PyAutoArray
    #    export PYTHONPATH=$PYTHONPATH:$ROOT_DIR/PyAutoGalaxy
    #    export PYTHONPATH=$PYTHONPATH:$ROOT_DIR/PyAutoLens
    #    export PYTHONPATH=$PYTHONPATH:$ROOT_DIR/PyAutoFit
    #    pushd autolens_workspace_test
    #
    #    python slam/imaging/no_lens_light/source_parametric/mass_total/no_hyper.py
    - name: Generate jupyter notebooks
      run: |
        pushd build
        python gen_ipynb_from_py.py
    - name: Run jupyter notebooks
      run: |
        export ROOT_DIR=`pwd`
        export PYTHONPATH=$PYTHONPATH:$ROOT_DIR/PyAutoArray
        export PYTHONPATH=$PYTHONPATH:$ROOT_DIR/PyAutoGalaxy
        export PYTHONPATH=$PYTHONPATH:$ROOT_DIR/PyAutoLens
        export PYTHONPATH=$PYTHONPATH:$ROOT_DIR/PyAutoFit
        pushd build
        python run_jupyter_notebooks.py

